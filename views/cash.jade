extends layout

block extraHeader
    script(type='text/javascript' src='/js/cash.js')
    script(type='text/javascript' src='/js/bindings/datepicker.js')
    script(type='text/javascript' src='/js/bindings/popover.js')
    link(rel='stylesheet', href='/css/cash.css')

block content
    div.container
        div.row
            div.col-md-12
                div.section.cash
                    .panel.panel-default.panel-table
                        .panel-heading
                            .row
                                .col.col-xs-6
                                    h3.panel-title Cash
                                .col.col-xs-6.text-right
                                    button.btn.btn-sm.btn-primary.btn-create(type='button', data-toggle='modal', data-target='#cashModal') Add New
                        .panel-body
                            .sk-folding-cube(data-bind='visible: cashLoading')
                                .sk-cube1.sk-cube
                                .sk-cube2.sk-cube
                                .sk-cube4.sk-cube
                                .sk-cube3.sk-cube
                            table.table.table-striped.table-bordered.table-list(display='none', data-bind='visible: !cashLoading()')
                                thead
                                    tr
                                        th #
                                        th Type
                                        th Amount
                                        th Value
                                        th Date
                                        th Used
                                        th.icon-column
                                tbody
                                    // ko foreach: cash
                                    tr(data-bind='attr: { id: id }')
                                        td(data-bind='text: ($index() + 1)')
                                        td(data-bind='text: type')
                                        td
                                            img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[currency].icon + ".png" }')
                                            span(data-bind='text: $root.formatCurrency(amount, currency)')
                                        td
                                            img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[base_currency].icon + ".png" }')
                                            span(data-bind='text: $root.formatCurrency(base_amount, base_currency)')
                                            span.m-left-small(data-bind='visible: estimate') (E)
                                        td(data-bind='text: moment(date).format("YYYY-MM-DD")')
                                        td
                                            img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[currency].icon + ".png" }')
                                            span(data-bind='text: $root.formatCurrency(used, currency) + " on " + transaction_count + " transactions"')
                                        td.cursor-pointer(data-bind='click: toggleRowDetails')
                                            i.details.material-icons(data-bind='text: showDetails() ? "keyboard_arrow_down" : "keyboard_arrow_right"')
                                    tr(data-bind='visible: showDetails')
                                        td(colspan='7', data-bind='visible: !detailsFetched()')
                                            .sk-folding-cube
                                                .sk-cube1.sk-cube
                                                .sk-cube2.sk-cube
                                                .sk-cube4.sk-cube
                                                .sk-cube3.sk-cube
                                        td(colspan='7', data-bind='visible: detailsFetched')
                                            ul
                                                // ko foreach: details
                                                li
                                                    span(data-bind='text:moment(date).format("YYYY-MM-DD")')
                                                    ul
                                                        // ko foreach: transactions
                                                        li
                                                            img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[currency].icon + ".png" }')
                                                            span(data-bind='text: $root.formatCurrency(amount, currency) + " (worth "')
                                                            img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[base_currency].icon + ".png" }')
                                                            span(data-bind='text: $root.formatCurrency(base_amount, base_currency) + ") spent on " + category')
                                                        // /ko
                                                // /ko
                                            a(data-bind='attr: { href: "/transactions?filters=" + encodeURIComponent(JSON.stringify({withdrawalId: id})) }') More Details
                                    // /ko
                        .panel-footer
                            .row
                                .col-md-2.page-display
                                    span(data-bind='text: pageDisplayText')
                                .col-md-8.text-center
                                    ul.pagination.hidden-md
                                        li
                                            a(href='#', data-bind='click: function(e) { navigate("first") }, clickBubble: false') <<
                                        li
                                            a(href='#', data-bind='click: function(e) { navigate("prev") }, clickBubble: false') <
                                        li.disabled
                                            a(href='#', data-bind='text: filters.page') 1
                                        li
                                            a(href='#', data-bind='click: function(e) { navigate("next") }, clickBubble: false') >
                                        li
                                            a(href='#', data-bind='click: function(e) { navigate("last") }, clickBubble: false') >>
                                .col-md-2.per-page
                                    .input-group
                                            span.input-group-addon Per Page: 
                                            select.form-control(data-bind='options: filters.limitList, value: filters.limit')

        //- Modals
        #cashModal.modal.fade(role='dialog', aria-labelledby='cashModalLabel')
            .modal-dialog(role='document')
                .modal-content
                    .modal-header
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                            span(aria-hidden='true') Ã—
                        h4#cashModalLabel.modal-title(data-bind='text: cashModalTitleText')
                    .modal-body
                        span.error-message(data-bind='visible: withdrawalError, text: withdrawalError')
                        div.row
                            div.amount-input.col-md-9
                                div.form-group(data-bind='css: { "has-error": withdrawalAmount.canValidate() && withdrawalAmount.errors().length }')
                                    label(for='withdrawalAmountInput', data-bind='text: cashModalAmountText')
                                    input.form-control(type='number', min='0', id='withdrawalAmountInput', data-bind='value: withdrawalAmount, valueUpdate: "afterkeydown"')
                                    //ko if: withdrawalAmount.canValidate() && withdrawalAmount.errors().length
                                    //ko foreach: withdrawalAmount.errors
                                    span.form-error(data-bind='text: message')
                                    // /ko
                                    // /ko
                            div.currency-input.col-md-3
                                label(for='withdrawalCurrency') Currency
                                select.form-control.currency-dropdown#withdrawalCurrency(required)
                                    option
                                //- small.form-text.text-muted.m-bottom The currency you withdrew from the ATM
                                br
                        label(for='withdrawalDate') Date
                        div.input-group
                            input.form-control(id='withdrawalDate', data-bind='dateTimePicker: withdrawalDate', type='text')
                            span.input-group-addon
                                i.material-icons date_range
                        div.form-group(data-bind='visible: !isEarnedCash()')
                            div.checkbox
                                label
                                    input.form-check-input(type='checkbox', value='', data-bind='checked: isTransactionFee')
                                    small.m-left-small This withdrawal incurred a transaction fee
                        div.input-group(data-bind='visible: !isEarnedCash() && isTransactionFee(), css: { "has-error": transactionFee.canValidate() && transactionFee.errors().length }')
                            label(for='transactionFee', data-bind='text: transactionFeeLabel')
                            input.form-control(type='number', min='0', id='transactionFee', data-bind='value: transactionFee, valueUpdate: "afterkeydown"')
                            //ko if: transactionFee.canValidate() && transactionFee.errors().length
                            //ko foreach: transactionFee.errors
                            span.form-error(data-bind='text: message')
                            // /ko
                            // /ko

                    .modal-footer
                        button.btn.btn-default(type='button', data-dismiss='modal') Cancel
                        button.btn.btn-primary(type='button', data-bind='click: saveWithdrawal, enable: canSubmitWithdrawal') Save


    script.
        var vm = new HomeViewModel();
        var currencies = !{currency};
        var countries = !{countries};
        vm.currencyArr = ko.observableArray(currencies);
        vm.currencyObj = ko.observable({});
        vm.countryArr = ko.observableArray([]);
        vm.countryObj = ko.observable(countries);

        // Preload flag images
        var images = new Array();
        var noImage = ['BQ', 'BV', 'GF', 'GP', 'HM', 'IO', 'PM', 'RE', 'SJ', 'SX', 'UM', 'XK'];
        function preload(src) {
            images.push(new Image());
            images[images.length - 1].src = src;
        }
        for(var key in vm.countryObj().countries) {
            if(vm.countryObj().countries.hasOwnProperty(key)) {
                var country = vm.countryObj().countries[key];
                if(noImage.indexOf(key) == -1) {
                    vm.countryObj().countries[key].icon = key;
                    preload('images/flags/16/' + key + '.png');
                }
                else {
                    vm.countryObj().countries[key].icon = '_unknown';
                }
                country.id = key;
                vm.countryArr.push(country);
            }
        }
        for(var i = 0; i < vm.currencyArr().length; i++) {
            vm.currencyObj()[vm.currencyArr()[i].id] = vm.currencyArr()[i];
        }
        vm.formatCurrency(2000, 'COP');
        
        $(document).ready(function() {
            ko.applyBindings(vm);
            var formatOption = function(item) {
                if (!item.icon) { return item.display_name; }
                var $item = $(
                    '<span><img src="images/flags/16/' + item.icon + '.png" class="img-flag" /> ' + item.display_name + '</span>'
                );
                return $item;
            };
            var formatSelection = function(item) {
                if (!item.icon) { return item.display_name; }
                var $item = $(
                    '<span><img src="images/flags/16/' + item.icon + '.png" class="img-flag" /> ' + item.id + '</span>'
                );
                return $item;
            };
            $('.currency-dropdown').select2({
                data: vm.currencyArr(),
                matcher: function(params, data) {
                    var term = $.trim(params.term);
                    if (term === '') {
                        return data;
                    }
                    if(data.id === '') {
                        return null;
                    }
                    if(data.display_name.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    return null;
                },
                placeholder: {
                    id: '',
                    display_name: 'Home Currency',
                    icon: '_unknown'
                },
                templateResult: formatOption,
                templateSelection: formatSelection,
                theme: 'bootstrap'
            });

            var formatCountryOption = function(item) {
                var code = item.id || '_unknown';
                if(noImage.indexOf(code) > -1) {
                    code = '_unknown';
                }
                var $item = $(
                    '<span><img src="images/flags/16/' + code + '.png" class="img-flag" /> ' + item.name + '</span>'
                );
                return $item;
            };
            $('.country-dropdown').select2({
                data: vm.countryArr(),
                matcher: function(params, data) {
                    var term = $.trim(params.term);
                    if (term === '') {
                        return data;
                    }
                    if(data.id === '') {
                        return null;
                    }
                    if(data.name.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    if(data.native.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    return null;
                },
                placeholder: {
                    id: '',
                    name: 'Select Country',
                    icon: '_unknown'
                },
                templateResult: formatCountryOption,
                templateSelection: formatCountryOption,
                theme: 'bootstrap'
            });
            //- $('.select2-selection').css('height', 'auto');

            $('#transactionModal').on('shown.bs.modal', function() {
                $('#transactionAmountInput').focus();
            });
            $('#transactionCurrency').on("select2:select", function (e) {
                $('#transactionDate').focus();
            });

            var lastTransactionCurrency = vm.getItem('lastTransactionCurrency');
            if(lastTransactionCurrency) {
                $('#transactionCurrency').val(lastTransactionCurrency).trigger('change');
            }
            var lastTransactionCountry = vm.getItem('lastTransactionCountry');
            if(lastTransactionCountry) {
                $('#transactionCountry').val(lastTransactionCountry).trigger('change');
            }
        });