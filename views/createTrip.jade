extends layout

block extraHeader
    script(type='text/javascript' src='/js/createTrip.js')
    script(type='text/javascript' src='/js/bindings/datepicker.js')
    script(type='text/javascript' src='/js/bindings/noUiSlider.js')
    script(type='text/javascript' src='/js/bindings/popover.js')
    link(rel='stylesheet', href='/css/createTrip.css')

block content
    .container
        .row
            .col-md-12
                .section.details
                    .panel.panel-default
                        .panel-heading
                            h3.panel-title Trip Details
                        .panel-body
                            form
                                .col-md-6
                                    .form-group.m-none
                                        input(type='text', name='tripName', id='tripName', class='form-control', placeholder='Trip Name')
                                .col-md-6
                                    .form-group.m-none
                                        .input-group
                                            input.form-control(type='text', name='tripStartDate', id='tripStartDate', placeholder='Start Date', data-bind='dateTimePicker: tripStartDate')
                                            span.input-group-addon
                                                i.material-icons date_range
        .row
            .col-md-8.m-right-none
                .section.segments
                    .panel.panel-default
                        .panel-heading
                            h3.panel-title Trip Segments
                        .panel-body
                            .segment-details(style='display: none', data-bind='visible: tripSegments().length > 0, foreach: tripSegments')
                                .panel.panel-info
                                    .panel-heading.segment-head(data-bind='click: toggle')
                                        .pull-left
                                            img.img-flag(data-bind='attr: { src: $root.getIconForCountry(country()) }')
                                        .pull-left.segment-head-text(data-bind='text: $root.getNameForCountry(country())')
                                        .pull-right.segment-head-text(data-bind='text: getBudgetText()')
                                    .panel-body.segment-body(data-bind='visible: expanded')
                                        .form-group.m-top-none
                                            .country-input
                                                select.form-control.country-dropdown#transactionCountry(data-bind='value: country')
                                                    option
                                        .form-group
                                            .row
                                                .col-md-4
                                                    .input-group
                                                        span.input-group-addon
                                                            i.material-icons.lock-icon(data-bind='text: daysLocked() ? "lock" : "lock_open", click: toggleDaysLock')
                                                        input.form-control(type='text', name='daysAmount', id='daysAmount', data-bind='value: days, disable: daysLocked')
                                                        span.input-group-addon
                                                            label(for='daysAmount') days
                                                .col-md-8
                                                    .slider.slider-info(data-bind='noUiSlider: { min: 1, max: 365, value: days, id: "days" }, css: { "force-disable": daysLocked }')
                                        .form-group.m-none
                                            .row
                                                .col-md-4
                                                    .input-group
                                                        span.input-group-addon
                                                            i.material-icons.lock-icon(data-bind='text: budgetLocked() ? "lock" : "lock_open", click: toggleBudgetLock')
                                                        input.form-control(type='text', name='budgetAmount', id='budgetAmount', data-bind='value: budget, disable: budgetLocked')
                                                        span.input-group-addon
                                                            label(for='budgetAmount', data-bind='text: $root.user().base_currency')
                                                .col-md-8
                                                    .slider.slider-info(data-bind='noUiSlider: { min: 1, max: 10000, value: budget, id: "budget" }, css: { "force-disable": budgetLocked }')
                                        .form-group.m-none
                                            .row
                                                .col-md-4
                                                    .input-group
                                                        span.input-group-addon
                                                            i.material-icons.lock-icon(data-bind='text: perDayLocked() ? "lock" : "lock_open", click: togglePerDayLock')
                                                        input.form-control(type='text', name='perDayAmount', id='perDayAmount', data-bind='value: perDay, disable: perDayLocked')
                                                        span.input-group-addon
                                                            label(for='perDayAmount', data-bind='text: $root.user().base_currency + "/Day"')
                                                .col-md-8
                                                    .slider.slider-info(data-bind='noUiSlider: { min: 1, max: 200, value: perDay, step: 0.01, id: "perDay" }, css: { "force-disable": perDayLocked }')
                            .add-segment(data-bind='click: addSegment')
                                span Add Segment
            .col-md-4
                .row
                    .col-md-12
                        .section.oneoff
                            .panel.panel-default
                                .panel-heading
                                    h3.panel-title oneoff
                                .panel-body
                                    span asdf
                .row
                    .col-md-12
                        .section.overview
                            .panel.panel-default
                                .panel-heading
                                    h3.panel-title overview
                                .panel-body
                                    span asdf

    script.
        var vm = new CreateTripViewModel();
        var currencies = !{currency};
        var countries = !{countries};
        var trip = !{trip};
        var user = !{user};
        vm.currencyArr = ko.observableArray(currencies);
        vm.currencyObj = ko.observable({});
        vm.countryArr = ko.observableArray([]);
        vm.countryObj = ko.observable(countries);
        vm.trip = ko.observable(trip);
        vm.user = ko.observable(user);

        // Preload flag images
        var images = new Array();
        var noImage = ['BQ', 'BV', 'GF', 'GP', 'HM', 'IO', 'PM', 'RE', 'SJ', 'SX', 'UM', 'XK'];
        function preload(src) {
            images.push(new Image());
            images[images.length - 1].src = src;
        }
        for(var key in vm.countryObj().countries) {
            if(vm.countryObj().countries.hasOwnProperty(key)) {
                var country = vm.countryObj().countries[key];
                if(noImage.indexOf(key) == -1) {
                    vm.countryObj().countries[key].icon = key;
                    preload('images/flags/16/' + key + '.png');
                }
                else {
                    vm.countryObj().countries[key].icon = '_unknown';
                }
                country.id = key;
                vm.countryArr.push(country);
            }
        }
        for(var i = 0; i < vm.currencyArr().length; i++) {
            vm.currencyObj()[vm.currencyArr()[i].id] = vm.currencyArr()[i];
        }
        
        $(document).ready(function() {
            console.log('asdf');
            ko.applyBindings(vm);
            var formatOption = function(item) {
                if (!item.icon) { return item.display_name; }
                var $item = $(
                    '<span><img src="images/flags/16/' + item.icon + '.png" class="img-flag" /> ' + item.display_name + '</span>'
                );
                return $item;
            };
            var formatSelection = function(item) {
                if (!item.icon) { return item.display_name; }
                var $item = $(
                    '<span><img src="images/flags/16/' + item.icon + '.png" class="img-flag" /> ' + item.id + '</span>'
                );
                return $item;
            };
            $('.currency-dropdown').select2({
                data: vm.currencyArr(),
                matcher: function(params, data) {
                    var term = $.trim(params.term);
                    if (term === '') {
                        return data;
                    }
                    if(data.id === '') {
                        return null;
                    }
                    if(data.display_name.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    return null;
                },
                placeholder: {
                    id: '',
                    display_name: 'Home Currency',
                    icon: '_unknown'
                },
                templateResult: formatOption,
                templateSelection: formatSelection,
                theme: 'bootstrap'
            });
            vm.initCountryDropdown();
        });