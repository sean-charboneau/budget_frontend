extends layout

block extraHeader
    link(rel='stylesheet', href='/css/transactions.css')

block extraScripts
    script(type='text/javascript' src='/js/transactions.js')
    script(type='text/javascript' src='/js/bindings/datepicker.js')
    script(type='text/javascript' src='/js/bindings/popover.js')

block content
    div.container
        div.row
            div.col-md-12
                .card
                    .card-header.default-color.lighten-1.white-text
                        .row
                            .col.col-xs-6
                                span Transactions
                            .col.col-xs-6.text-right(style='display: none', data-bind='visible: !transactionsLoading()')
                                button.btn.btn-sm.stylish-color.btn-create.waves-effect(type='button', data-toggle='modal', data-target='#transactionModal') Add New
                    .card-body.p-none
                        .text-center(data-bind='visible: transactionsLoading')
                            .preloader-wrapper.big.active.m-top.m-bottom
                                .spinner-layer.spinner-blue-only
                                    .circle-clipper.left
                                        .circle
                                    .gap-patch
                                        .circle
                                    .circle-clipper.right
                                        .circle
                        table.table.table-striped.table-bordered.table-list(style='display: none', data-bind='visible: !transactionsLoading()')
                            thead
                                tr
                                    th #
                                    th.cursor-pointer(data-bind='click: function() { sort("type"); }')
                                        div.row
                                            div.col-md-9
                                                span Type
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "type" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "type" && sortOrder() == "asc"')
                                    th.cursor-pointer(data-bind='click: function() { sort("amount"); }')
                                        div.row
                                            div.col-md-9
                                                span Amount
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "amount" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "amount" && sortOrder() == "asc"')
                                    th.cursor-pointer(data-bind='click: function() { sort("value"); }')
                                        div.row
                                            div.col-md-9
                                                span Value
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "value" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "value" && sortOrder() == "asc"')
                                    th.cursor-pointer(data-bind='click: function() { sort("category"); }')
                                        div.row
                                            div.col-md-9
                                                span Category
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "category" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "category" && sortOrder() == "asc"')
                                    th.cursor-pointer(data-bind='click: function() { sort("date"); }')
                                        div.row
                                            div.col-md-9
                                                span Date
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "date" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "date" && sortOrder() == "asc"')
                                    th.cursor-pointer(data-bind='click: function() { sort("country"); }')
                                        div.row
                                            div.col-md-9
                                                span Country
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "country" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "country" && sortOrder() == "asc"')
                                    th.cursor-pointer(data-bind='click: function() { sort("description"); }')
                                        div.row
                                            div.col-md-9
                                                span Description
                                            div.col-md-3
                                                i.fa.fa-caret-down(data-bind='visible: sortField() == "description" && sortOrder() == "desc"')
                                                i.fa.fa-caret-up(data-bind='visible: sortField() == "description" && sortOrder() == "asc"')
                            tbody
                                // ko foreach: transactions
                                tr
                                    td(data-bind='text: ($index() + 1)')
                                    td(data-bind='text: $root.toTitleCase(type)')
                                    td
                                        img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[currency].icon + ".png" }')
                                        span(data-bind='text: amount + " " + currency')
                                    td
                                        img.img-flag(data-bind='attr: { src: "images/flags/16/" + $root.currencyObj()[base_currency].icon + ".png" }')
                                        span(data-bind='text: base_amount + " " + base_currency')
                                    td(data-bind='text: $root.toTitleCase(category)')
                                    td(data-bind='text: moment(date).format("YYYY-MM-DD")')
                                    td
                                        img.img-flag(data-bind='attr: { src: $root.getIconForCountry(country) }')
                                        span(data-bind='text: $root.getNameForCountry(country)')
                                    td(data-bind='text: description')
                                // /ko
                    .panel-footer(style='display: none', data-bind='visible: !transactionsLoading()')
                        .row
                            .col-md-5.page-display
                                span(data-bind='text: pageDisplayText')
                            .col-md-5.text-center
                                ul.pagination.hidden-md
                                    li
                                        a(href='#', data-bind='click: function(e) { navigate("first") }, clickBubble: false') <<
                                    li
                                        a(href='#', data-bind='click: function(e) { navigate("prev") }, clickBubble: false') <
                                    li.disabled
                                        a(href='#', data-bind='text: filters.page') 1
                                    li
                                        a(href='#', data-bind='click: function(e) { navigate("next") }, clickBubble: false') >
                                    li
                                        a(href='#', data-bind='click: function(e) { navigate("last") }, clickBubble: false') >>
                            .col-md-2.per-page
                                .input-group
                                    .input-group-prepend
                                        span.input-group-text Per Page: 
                                    select.form-control(data-bind='options: filters.limitList, value: filters.limit')

        //- Modals
        #transactionModal.modal.fade(role='dialog', aria-labelledby='transactionModalLabel', aria-hidden='true')
            .modal-dialog.cascading-modal(role='document')
                // Content
                .modal-content
                    // Header
                    .modal-header.default-color.darken-3.white-text
                        h4.title
                            i.fa.fa-money
                            |  Record Transaction
                        button.close.waves-effect.waves-light(type='button', data-dismiss='modal', aria-label='Close')
                            span(aria-hidden='true') Ã—
                    // Body
                    .modal-body.mb-0
                        span.error-message(data-bind='visible: transactionError, text: transactionError')
                        .md-form.switch-input
                            .switch
                                label
                                    | Cash
                                    input(type='checkbox', data-bind='checked: transactionCredit')
                                    span.lever
                                    |       Credit

                        .form-group.m-none
                            .row
                                .amount-input.col-md-8(data-bind='css: { "has-error": transactionAmount.canValidate() && transactionAmount.errors().length }')
                                    .md-form
                                        input#transactionAmountInput.form-control(type='number', min='0', data-bind='value: transactionAmount, valueUpdate: "afterkeydown"')
                                        label(for='transactionAmountInput') Transaction Amount
                                    //ko if: transactionAmount.canValidate() && transactionAmount.errors().length
                                    //ko foreach: transactionAmount.errors
                                    span.form-error(data-bind='text: message')
                                    // /ko
                                    // /ko
                                .currency-input.col-md-4
                                    label(for='transactionCurrency') Currency
                                    select.form-control.currency-dropdown#transactionCurrency(required)
                                        option
                                    //- small.form-text.text-muted.m-bottom The currency in which you paid
                                    br
                        .form-group.m-none
                            .row
                                .col-md-6
                                    label(for='transactionDate', data-bind='text: transactionDateLabel')
                                    .input-group
                                        input.form-control(id='transactionDate', data-bind='dateTimePicker: transactionDate', type='text')
                                        .input-group-append
                                            span.input-group-text
                                                i.fa.fa-calendar
                                .col-md-6(data-bind='visible: transactionSplit')
                                    label(for='transactionEnd') End Date
                                    .input-group
                                        input.form-control(id='transactionEnd', data-bind='dateTimePicker: transactionEnd', type='text')
                                        .input-group-append
                                            span.input-group-text
                                                i.fa.fa-calendar
                            .row.m-top-small.m-bottom
                                .col-md-12
                                    a(href='#' style='font-size: 70%', data-bind='click: toggleTransactionSplit, text: transactionSplitText')

                        .form-group(data-bind='visible: !unassociatedTransaction()')
                            .country-input
                                label(for='transactionCountry') Country
                                select.form-control.country-dropdown#transactionCountry(required)
                                    option
                        .do-not-associate
                            .form-group
                                input#doNotAssociateCheckbox(type='checkbox', value='', data-bind='checked: unassociatedTransaction')
                                label(for='doNotAssociateCheckbox') Do not associate this transaction with a country
                                i.fa.fa-question-circle-o.help(data-bind='popover: { options: { content: "If selected, this transaction will not show up in any country\'s expenses.  It will show up in its own Unassigned category.", trigger: "hover" } }')
                                    
                        .form-group
                            label Category
                            .row
                                // ko foreach: categories
                                .col-md-2
                                    .row.category-option(data-bind='click: $root.categoryClicked, css: { "category-selected": $root.selectedCategory() && ($root.selectedCategory().id == id) }')
                                        input.category-value(type='hidden', data-bind='value: id')
                                        .col-md-12.category-icon
                                            i(data-bind='attr: { "class": "fa fa-" + icon }')
                                        .col-md-12.category-label
                                            span(data-bind='text: $root.toTitleCase(category)')
                                // /ko
                        .form-group
                            .md-form
                                textarea.md-textarea#descriptionInput(type='text', data-bind='value: transactionDescription, valueUpdate: "afterkeydown"')
                                label(for='descriptionInput', data-bind='text: descriptionRemainingLength')
                                        

                    .modal-footer
                        button.btn.btn-default.waves-effect(type='button', data-dismiss='modal') Cancel
                        button.btn.stylish-color.waves-effect(type='button', data-bind='click: saveTransaction, enable: canSubmitTransaction') Save


    script.
        $('#transactions-nav').addClass('active');
        var vm = new TransactionsViewModel();
        var currencies = !{currency};
        var countries = !{countries};
        vm.currencyArr = ko.observableArray(currencies);
        vm.currencyObj = ko.observable({});
        vm.countryArr = ko.observableArray([]);
        vm.countryObj = ko.observable(countries);

        // Preload flag images
        var images = new Array();
        var noImage = ['BQ', 'BV', 'GF', 'GP', 'HM', 'IO', 'PM', 'RE', 'SJ', 'SX', 'UM', 'XK'];
        function preload(src) {
            images.push(new Image());
            images[images.length - 1].src = src;
        }
        for(var key in vm.countryObj().countries) {
            if(vm.countryObj().countries.hasOwnProperty(key)) {
                var country = vm.countryObj().countries[key];
                if(noImage.indexOf(key) == -1) {
                    vm.countryObj().countries[key].icon = key;
                    preload('images/flags/16/' + key + '.png');
                }
                else {
                    vm.countryObj().countries[key].icon = '_unknown';
                }
                country.id = key;
                vm.countryArr.push(country);
            }
        }
        for(var i = 0; i < vm.currencyArr().length; i++) {
            vm.currencyObj()[vm.currencyArr()[i].id] = vm.currencyArr()[i];
        }
        
        $(document).ready(function() {
            ko.applyBindings(vm);
            var formatOption = function(item) {
                if (!item.icon) { return item.display_name; }
                var $item = $(
                    '<span><img src="images/flags/16/' + item.icon + '.png" class="img-flag" /> ' + item.display_name + '</span>'
                );
                return $item;
            };
            var formatSelection = function(item) {
                if (!item.icon) { return item.display_name; }
                var $item = $(
                    '<span><img src="images/flags/16/' + item.icon + '.png" class="img-flag" /> ' + item.id + '</span>'
                );
                return $item;
            };
            $('.currency-dropdown').select2({
                data: vm.currencyArr(),
                matcher: function(params, data) {
                    var term = $.trim(params.term);
                    if (term === '') {
                        return data;
                    }
                    if(data.id === '') {
                        return null;
                    }
                    if(data.display_name.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    return null;
                },
                placeholder: {
                    id: '',
                    display_name: 'Home Currency',
                    icon: '_unknown'
                },
                templateResult: formatOption,
                templateSelection: formatSelection,
                theme: 'bootstrap'
            });

            var formatCountryOption = function(item) {
                var code = item.id || '_unknown';
                if(noImage.indexOf(code) > -1) {
                    code = '_unknown';
                }
                var $item = $(
                    '<span><img src="images/flags/16/' + code + '.png" class="img-flag" /> ' + item.name + '</span>'
                );
                return $item;
            };
            $('.country-dropdown').select2({
                data: vm.countryArr(),
                matcher: function(params, data) {
                    var term = $.trim(params.term);
                    if (term === '') {
                        return data;
                    }
                    if(data.id === '') {
                        return null;
                    }
                    if(data.name.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    if(data.native.toUpperCase().indexOf(term.toUpperCase()) > -1) {
                        return data;
                    }
                    return null;
                },
                placeholder: {
                    id: '',
                    name: 'Select Country',
                    icon: '_unknown'
                },
                templateResult: formatCountryOption,
                templateSelection: formatCountryOption,
                theme: 'bootstrap'
            });
            //- $('.select2-selection').css('height', 'auto');

            $('#transactionModal').on('shown.bs.modal', function() {
                $('#transactionAmountInput').focus();
            });
            $('#transactionCurrency').on("select2:select", function (e) {
                $('#transactionDate').focus();
            });

            var lastTransactionCurrency = vm.getItem('lastTransactionCurrency');
            if(lastTransactionCurrency) {
                $('#transactionCurrency').val(lastTransactionCurrency).trigger('change');
            }
            var lastTransactionCountry = vm.getItem('lastTransactionCountry');
            if(lastTransactionCountry) {
                $('#transactionCountry').val(lastTransactionCountry).trigger('change');
            }
        });